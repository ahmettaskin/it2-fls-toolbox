classdef ruleEditor
    %RULEEDÝTOR Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
    end
    
    methods
        function obj = ruleEditor(action) 
            if nargin<1,
                newFis=newfis('Untitled');
                newFis=addvar(newFis,'input','input1',[0 1],'init');
                newFis=addvar(newFis,'output','output1',[0 1],'init');
                action=newFis;
            end
            
            ruleeditor = findall(0,'type','figure','Tag','ruleedit');
            if ~isempty(ruleeditor) && isequal(action,'initilaize')
                figure(ruleeditor);
                return
            end
            
            if isstr(action),
                if action(1)~='#',
                    % The string "action" is not a switch for this function,
                    % so it must be a disk file
                    % fis=readfis(action);
                    figNumber=gcf;
                    fis=helper.getAppdata;
                    action='#initialize';
                end
            else
                % For initialization, the fis matrix is passed in as the parameter
                fis=action;
                action='#initialize';
            end;
            
            fisName=fis.name;
            fisType=fis.type;
            
            if isprop(fis, 'input')
                numInputs=length(fis.input);
            else
                numInputs=0;
            end
            if isprop(fis, 'output')
                numOutputs=length(fis.output);
            else
                numOutputs=0;
            end
            
            if isprop(fis, 'rule')
                numRules=length(fis.rule);
            else
                numRules=0;
            end
            %===================================
            % Information for all objects
            frmColor=192/255*[1 1 1];
            btnColor=192/255*[1 1 1];
            popupColor=192/255*[1 1 1];
            editColor=255/255*[1 1 1];
            axColor=128/255*[1 1 1];
            border=.01;
            spacing=.01;
            figPos=get(0,'DefaultFigurePosition');
            maxRight=1;
            maxTop=1;
            btnWid=.14;
            btnHt=0.05;
            
            %====================================
            % The FIGURE
            thisfis{1}=fis;
            figNumber=figure( ...
                'Name',['Rule Editor'], ...
                'NumberTitle','off', ...
                'IntegerHandle','off',...
                'Color',frmColor, ...
                'MenuBar','none', ...
                'Visible','on', ...
                'UserData',thisfis, ...
                'Position',figPos, ...
                'Tag','ruleedit');
            figPos=get(figNumber,'position');
            %         set(figNumber, 'WindowStyle', 'docked')
            %         setFigDockGroup(figNumber, 'Interval Type-2 Fuzzy Logic Systems Toolbox');
            %====================================
            % The MENUBAR items
            % Call fisgui to create the menubar items
            %fisgui #initialize
            
            %========================================================
            % The MAIN frame
            bottom=border;
            top=maxTop-border;
            right=maxRight-border;
            left=border;
            frmBorder=spacing;
            frmPos=[left-frmBorder bottom-frmBorder ...
                right-left+frmBorder*2 top-bottom+frmBorder*2];
            mainFrmHndl=uicontrol( ...
                'Units','normal', ...
                'Style','frame', ...
                'Position',frmPos, ...
                'BackgroundColor',frmColor);
            %====================================
            
            bottom=border+4*spacing+btnHt;
            % The RULES frame
            top=maxTop-border-spacing;
            right=maxRight-border-spacing;
            left=border+spacing;
            frmBorder=spacing;
            frmPos=[left-frmBorder bottom-frmBorder ...
                right-left+frmBorder*2 top-bottom+frmBorder*2];
            ruleFrmHndl=uicontrol( ...
                'Style','frame', ...
                'Units','normal', ...
                'Position',frmPos, ...
                'BackgroundColor',frmColor);
            %------------------------------------
            % The RULES edit window
            rulePos=[left top-(top-bottom)*2/5-border (right-left) (top-bottom)*2/5];
            if numRules>0,
                labelStr=' ';
            else
                labelStr=' ';
                msgStr=['No rules for system "' fisName '"'];
                statmsg(figNumber,msgStr);
            end
            name='rulewindow';
            pos=[left bottom btnWid*2 btnHt];
            ruleHndl=uicontrol( ...
                'Style','listbox', ...
                'Units','normal', ...
                'Position',rulePos, ...
                'BackgroundColor',editColor, ...
                'HorizontalAlignment','left', ...
                'Callback', {@getrule obj},...
                'Max',1, ...
                'Tag',name);
            %========radio button for and, or=========
            frmPos=[left bottom ...
                btnWid+spacing btnHt*2.6];
            clsFrmHndl=uicontrol( ...
                'Style','frame', ...
                'Units','normal', ...
                'Position',frmPos, ...
                'BackgroundColor',frmColor);
            labelPos=[left+1*spacing bottom+btnHt*2 ...
                btnWid*.9 btnHt];
            clsFrmHndl=uicontrol( ...
                'Style','text', ...
                'Units','normal', ...
                'Position',labelPos, ...
                'String', 'Connection',...
                'BackgroundColor',frmColor);
            pos=[left+2*spacing bottom+1*spacing btnWid*.6 btnHt];
            helpHndl=uicontrol( ...
                'Style','radio', ...
                'Units','normal', ...
                'Position',pos, ...
                'BackgroundColor',btnColor, ...
                'String','and', ...
                'Tag', 'radio',...
                'Max', 1,...
                'Value', 1,...
                'Callback',{@radio obj});
            pos=[left+2*spacing bottom+btnHt+1*spacing btnWid*.6 btnHt];
            helpHndl=uicontrol( ...
                'Style','radio', ...
                'Units','normal', ...
                'Position',pos, ...
                'BackgroundColor',btnColor, ...
                'String','or', ...
                'Tag', 'radio',...
                'Max', 1,...
                'Callback',{@radio obj});
            %=====weight text=================
            pos=[left+(btnWid)+btnHt/2+spacing bottom+btnHt*2 btnWid*.7 btnHt];
            helpHndl=uicontrol( ...
                'Style','text', ...
                'Units','normal', ...
                'Position',pos, ...
                'BackgroundColor',frmColor, ...
                'String','Weight:');
            pos=[left+btnWid+btnHt bottom btnWid/2 btnHt];
            helpHndl=uicontrol( ...
                'Style','edit', ...
                'Units','normal', ...
                'Position',pos, ...
                'BackgroundColor','white', ...
                'String',num2str(1),...
                'Callback', 'wStr=max(min(1, str2double(get(gcbo, ''String''))), 0); set(gcbo, ''string'', num2str(wStr))', ...
                'Tag', 'weight');
            %=========delete======================
            boxDstn=btnWid+spacing;
            boxWidth=(right-left)/6;
            pos=[left+boxDstn*2 bottom btnWid btnHt];
            helpHndl=uicontrol( ...
                'Style','pushbutton', ...
                'Units','normal', ...
                'Position',pos, ...
                'String','Delete rule',...
                'Callback', {@delete obj},...
                'Tag', 'delete');
            
            %========button for add=========
            pos=[left+boxDstn*3 bottom btnWid btnHt];
            helpHndl=uicontrol( ...
                'Style','push', ...
                'Units','normal', ...
                'Position',pos, ...
                'BackgroundColor',btnColor, ...
                'String','Add rule', ...
                'Callback', {@add obj});
            %========button for apply=========
            pos=[left+boxDstn*4 bottom btnWid btnHt];
            helpHndl=uicontrol( ...
                'Style','push', ...
                'Units','normal', ...
                'Position',pos, ...
                'BackgroundColor',btnColor, ...
                'String','Change rule', ...
                'Callback', {@add obj});
            %=======buttons for shift=============
            pos=[right-2*spacing-btnWid*2/3 bottom btnWid/3 btnHt];
            helpHndl=uicontrol( ...
                'Style','push', ...
                'Units','normal', ...
                'Position',pos, ...
                'BackgroundColor',btnColor, ...
                'Tag', 'shiftright',...
                'String','<<', ...
                'Callback', {@shiftRight obj});
            pos=[right-spacing-btnWid/3 bottom btnWid/3 btnHt];
            helpHndl=uicontrol( ...
                'Style','push', ...
                'Units','normal', ...
                'Position',pos, ...
                'BackgroundColor',btnColor, ...
                'Tag', 'shiftleft',...
                'String','>>', ...
                'Callback',{@shiftLeft obj});
            
            %====================================
            % The CLOSE frame
            bottom=border+4*spacing+btnHt;
            top=bottom+btnHt;
            right=maxRight-border-spacing;
            % Left should be snug up against Rule Format frame
            left=border+spacing;
            
            frmBorder=spacing;
            
            %====================================
            % The STATUS frame
            bottom=border+spacing;
            top=bottom+btnHt;
            right=maxRight-border-spacing;
            left=border+spacing;
            frmBorder=spacing;
            frmPos=[left-frmBorder bottom-frmBorder ...
                (right-left)*2/3+frmBorder*2 top-bottom+frmBorder*2];
            mainFrmHndl=uicontrol( ...
                'Style','frame', ...
                'Units','normal', ...
                'Position',frmPos, ...
                'BackgroundColor',frmColor);
            
            frmPos=[left-frmBorder+(right-left)*2/3+frmBorder*3 bottom-frmBorder ...
                (right-left)*1/3-frmBorder top-bottom+frmBorder*2];
            mainFrmHndl=uicontrol( ...
                'Style','frame', ...
                'Units','normal', ...
                'Position',frmPos, ...
                'BackgroundColor',frmColor);
            
            %------------------------------------
            % The STATUS text window
            labelStr=['FIS Name: ' fisName];
            name='status';
            pos=[left bottom (right-left)/2 btnHt];
            txtHndl=uicontrol( ...
                'Style','text', ...
                'BackgroundColor',frmColor, ...
                'HorizontalAlignment','left', ...
                'Units','normal', ...
                'Position',pos, ...
                'Tag',name, ...
                'String',labelStr);
            %------------------------------------
            % The HELP button
            %    bottom=bottom+spacing;
            %         labelStr='Help';
            %         callbackStr={@help obj};
            %         helpHndl=uicontrol( ...
            %             'Style','push', ...
            %             'Units','normal', ...
            %             'Position',[right-2*btnWid-spacing bottom btnWid btnHt], ...
            %             'BackgroundColor',btnColor, ...
            %             'String',labelStr, ...
            %             'Callback',callbackStr);
            
            %------------------------------------
            %The CLOSE button
            labelStr='Close';
            callbackStr='fisgui #close';
            closeHndl=uicontrol( ...
                'Style','push', ...
                'Units','normal', ...
                'Position',[right-btnWid bottom btnWid btnHt], ...
                'BackgroundColor',btnColor, ...
                'String',labelStr, ...
                'Callback',{@close obj});
            obj.update();
            
            % Normalize all coordinates
            hndlList=findobj(figNumber,'Units','pixels');
            set(hndlList,'Units','normalized');
            
            % Uncover the figure
            thisfis{1}=fis;
            set(figNumber, ...
                'Visible','on', ...
                'UserData',thisfis, ...
                'HandleVisibility','callback');
            
            %%init
            index=1;
            localGetRule(obj, figNumber, index, fis);
        end
    end
end
